import type { NextPage } from 'next'
import { useEffect } from 'react'
import { useRecoilTransaction_UNSTABLE, useRecoilValue } from 'recoil'
import Sheet from '@/components/Sheet'
import Controls from '@/components/Controls'
import utils from '@/utils'
import store from '@/store'
import { computeAnalysisList } from '@/store/sheet/compute'
import { color, Log, Position, TimeLine } from '@/store/sheet/types'
import Head from 'next/head'

const Index: NextPage = () => {
  const sheetState = store.sheet.state
  const cellStyle = useRecoilValue(sheetState.cellStyle)
  const InitTimeline = useRecoilTransaction_UNSTABLE(({ get, set }) => () => {
    const $subtitleList: TimeLine[][] = utils.storage.get('subtitle-list') ?? []
    const $colorChips: color[] = utils.storage.get('CaptionColorTemp') ?? get(sheetState.colorChips)
    if ($subtitleList.length === 0) {
      const $subtitleTemp: TimeLine[] = utils.storage.get('SUBTITLE_TEMP')
      $subtitleTemp && $subtitleList.push($subtitleTemp)
    }
    if ($subtitleList.length) {
      const $limit = $subtitleList.length
      const $sheetTabList: string[] = utils.storage.get('sheet-tab-list') ?? $subtitleList.map((_, eq) => `Sheet${eq+1}`)
      const $positionList: Position[] = $subtitleList.map(() => ({row: 0, col: "text"}))
      const $logList: Log[][] = $subtitleList.map(() => ([]))
      const $activeLogList: number[] = $subtitleList.map(() => 0)
      const $pagingList: number[] = $subtitleList.map(() => 0)
      
      set(sheetState.subtitleList, $subtitleList)
      set(sheetState.analysisList, computeAnalysisList($subtitleList, cellStyle))
      set(sheetState.sheetTabList, $sheetTabList.filter((_, eq) => eq < $limit))
      set(sheetState.positionList, $positionList)
      set(sheetState.logList, $logList)
      set(sheetState.activeLogList, $activeLogList)
      set(sheetState.pagingList, $pagingList)
    } else {
      set(sheetState.analysisList, computeAnalysisList(get(sheetState.subtitleList), cellStyle))
    }
    set(sheetState.colorChips, $colorChips)
  })
  useEffect(() => InitTimeline(), [InitTimeline])
  return (<>
    <Head>
      <title>Caption Studio</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <div className="article">
      <Controls />
      <Sheet />
    </div>
  </>)
}

export default Index